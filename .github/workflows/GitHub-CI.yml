name: GitHub-CI
on: 
  [push]

# Simple example for write Ahoj Batman :-)
jobs:
  build:
    name: VÃ­tej
    runs-on: ubuntu-latest
    steps:
      - name: Ahoj
        uses: actions/hello-world-javascript-action@v1
        with:
          who-to-greet: 'Batman'
        id: ahoj

  # Test APi with Robot Framework
  robotApiTest:
    name: robotApiTest
    runs-on: ubuntu-latest    # Run on ubutnu
    steps:
      - uses: actions/checkout@v2   # Import repository to workflow directory 
      - name: Install requirements
        run: |                      # Using python
          python -m pip install --upgrade pip   
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install robotframework-requests 
      - name: Start test          # Start Api test
        run: | 
          python -m robot -i api test/RobotFrameWork/tc.robot

  # Docker and robot framework =Using docker in Github Action with docker Run
  robotWebTest:
    name: robotWebTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker for RF
        run: |
          docker run --shm-size=1g \
          -v ${{ github.workspace }}/test/RobotFrameWork:/opt/robotframework/reports:Z \
          -v ${{ github.workspace }}/test/RobotFrameWork:/opt/robotframework/tests:Z \
          -e BROWSER=chrome \
          --user=1001:1001 \
          ppodgorsek/robot-framework:latest
          
  #K6 Load Test = Using Actions from github market place
  loadTest:
    name: k6 Load Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run k6 local test
        uses: k6io/action@v0.1
        with:
          filename: ${{ github.workspace }}/test/k6/loadtest.js
          flags: --vus 50 --duration 10s
  
  # Code quality = Shows how to use github secrets
  codeQuality:
    name: Code Quality test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #WebPage speed = Shows how to start some test if pass loadTest before
  webPageSpeed:
    needs: [loadTest]
    name: Speed.io0
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v2
      - name: running Sitespeed container with options and arguments
        run: | 
           docker run --cap-add=NET_ADMIN --rm  -e REPLAY=true -e LATENCY=100 \
           sitespeedio/sitespeed.io https://procesor2017.github.io/gitHubWorkShop/ \
           -n 1 -b chrome

  #Postman RUN in docker
  postmanRun:
    name: Postman run [NewMan CLI]
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v2
      - name: Run NEwMan
        uses: anthonyvscode/newman-action@v1
        with:
          collection: ${{ github.workspace }}/test/testapi.json
          reporters: cli
  
  #RobotFramework example how to create simple report, upload artefact etc.
  rfStartTestInDocker:
    name: Start RF test in docker and upload results to folder
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Start test
      run: |
        docker run --shm-size=1g \
        -v ${{ github.workspace }}/test/RobotFrameWork:/opt/robotframework/reports:Z \
        -v ${{ github.workspace }}/test/RobotFrameWork:/opt/robotframework/tests:Z \
        -e BROWSER=chrome \
        --user=1001:1001 \
        ppodgorsek/robot-framework:latest
    - name: Upload test results
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: reports
        path: ${{ github.workspace }}/test/RobotFrameWork
  playwrightReport:
    name: Playwright 
    runs-on: ubuntu-latest
    env:
      endpoint: http://portal.tesena.com/api/v1
      token: ${{ secrets.UUID }}
      launch: ${{ secrets.LAUNCH }}
      project: ${{ secrets.PROJECT }}
      description: Playwright Test
    steps:
      - uses: actions/checkout@v2.3.2
      - name: Playwright
        run: |
          echo ahoj $endpoint
          cd ${{ github.workspace }}/test/playwright
          npm install
          npm update
          npm test
  # Git leaks can controll your push         
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: gitleaks-action
      uses: zricethezav/gitleaks-action@master
